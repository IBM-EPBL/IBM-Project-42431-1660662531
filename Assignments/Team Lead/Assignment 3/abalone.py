# -*- coding: utf-8 -*-
"""abalone.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ora9ZRTn6lSvr20HlrP7eOtRLS01HoM0
"""

from google.colab import drive

import pandas as pd

path = "/content/drive/MyDrive/abalone.xlsx"
df = pd.read_excel(path)

#load the dataset

df.head()

import seaborn as sns
import numpy as np
import pandas as pd

### Univariate analysis

sns.distplot(df.Length) # numeric
sns.boxplot(df.Height) # numeric
sns.distplot(df.Rings)
sns.countplot(df.Sex) # categorical
sns.countplot(df.Diameter)

## Bivariate analysis

df.plot.scatter('Length','Height')

## Multivariate analysis

sns.pairplot(df)

df.shape

df.info()

df.isnull().any()

df.describe()

df.median()

df.Sex.value_counts()

df.Rings.value_counts()

df.Height.value_counts()

df.Length.value_counts()

median = df.loc[df['Length']<0.2, 'Length'].median()
df.loc[df.Length > 0.5, 'Length'] = np.nan
df.fillna(median,inplace=True)


df["Length"] = np.where(df["Length"] >0.2, median,df['Length'])


df["Length"] = df["Length"].mask(df["Length"] >0.2, median)

sns.boxplot(df.Length)

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
outliers=[]
def detect_outliers(data):
  threshold=3
  mean=np.mean(data)
  std=np.std(data)
  for i in data:
    z_score=(i-mean)/std
    if np.abs(z_score)>threshold:
      outliers.append(y)
  return outliers   
  outlier_pt=detect_outliers(path)
  outlier_pt

import pandas as pd
s = pd.Series(list('Length'))
pd.get_dummies(s)

import pandas as pd
        
df = pd.DataFrame({
          'Sex':['M','F','I'],
          'Rings':[10,9,15]
        })
df

# Get one hot encoding of columns Rings

one_hot = pd.get_dummies(df['Rings'])

# Drop column Rings as it is now encoded

df = df.drop('Rings',axis = 1)

# Join the encoded df

df = df.join(one_hot)
df

import pandas as pd

path = "/content/drive/MyDrive/abalone.xlsx"
df = pd.read_excel(path)
df.head()
df_tips=pd.get_dummies(df)
df_tips

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
path = "/content/drive/MyDrive/abalone.xlsx"
df = pd.read_excel(path)
x=df.iloc[:,1:5]
y=df.iloc[:,5]
print(df.describe())

x=df.iloc[:,1:14]
print(df.describe())

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.25,random_state=1)

x_train.shape

y_train.shape

x_test.shape

y_test.shape